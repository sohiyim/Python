from telegram import Update
from telegram.ext import Updater, CommandHandler, MessageHandler, CallbackContext, Filters
from selenium import webdriver
from selenium.webdriver.common.keys import Keys
import time
import getpass

# Telegram bot token
TOKEN = '6453631030:AAGbwp0_-tDmkf26yVdOuy6hq4VcO4fqpGo'

def start(update: Update, context: CallbackContext) -> None:
    update.message.reply_text('Assalomu alaykum! Google parolni o\'zgartirish uchun /change_password buyrug\'ini bering.')

def change_password(update: Update, context: CallbackContext) -> None:
    chat_id = update.message.chat_id
    update.message.reply_text('Google emailingizni kiriting:')
    context.user_data['chat_id'] = chat_id
    return "get_email"

def get_email(update: Update, context: CallbackContext) -> None:
    email = update.message.text
    context.user_data['email'] = email
    update.message.reply_text('Hozirgi parolingizni kiriting:')
    return "get_current_password"

def get_current_password(update: Update, context: CallbackContext) -> None:
    current_password = update.message.text
    context.user_data['current_password'] = current_password
    update.message.reply_text('Yangi parolingizni kiriting:')
    return "get_new_password"

def get_new_password(update: Update, context: CallbackContext) -> None:
    new_password = update.message.text
    context.user_data['new_password'] = new_password

    # Parolni o'zgartirish
    change_google_password(context.user_data['email'], context.user_data['current_password'], context.user_data['new_password'])

    update.message.reply_text('Parol muvaffaqiyatli o\'zgartirildi.')

    # Clear user data
    context.user_data.clear()

    return "conversation_end"

def conversation_end(update: Update, context: CallbackContext) -> None:
    update.message.reply_text('Rahmat! Agar boshqa amal kerak bo\'lsa, /change_password buyrug\'ini bering.')

def main() -> None:
    # Create the Updater and pass it your bot's token
    updater = Updater(TOKEN)

    # Get the dispatcher to register handlers
    dp = updater.dispatcher

    # Register command and message handlers
    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(CommandHandler("change_password", change_password))
    dp.add_handler(MessageHandler(Filters.text & ~Filters.command, get_email))
    dp.add_handler(MessageHandler(Filters.text & ~Filters.command, get_current_password))
    dp.add_handler(MessageHandler(Filters.text & ~Filters.command, get_new_password))
    dp.add_handler(MessageHandler(Filters.text & ~Filters.command, conversation_end))

    # Start the Bot
    updater.start_polling()

    # Run the bot until you send a signal to stop it
    updater.idle()

if __name__ == '__main__':
    main()
